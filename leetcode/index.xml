<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Leetcodes on Zxq&#39;s Blog</title>
    <link>https://oxygenbytes.github.io/leetcode/</link>
    <description>Recent content in Leetcodes on Zxq&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>&lt;a href=&#34;https://oxygenbytes.github.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;cd /home/zxq/&lt;/a&gt;</copyright>
    <lastBuildDate>Mon, 03 Jan 2022 23:02:51 +0800</lastBuildDate><atom:link href="https://oxygenbytes.github.io/leetcode/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[27]移除元素</title>
      <link>https://oxygenbytes.github.io/leetcode/array/27%E7%A7%BB%E9%99%A4%E5%85%83%E7%B4%A0/</link>
      <pubDate>Mon, 03 Jan 2022 23:02:51 +0800</pubDate>
      
      <guid>https://oxygenbytes.github.io/leetcode/array/27%E7%A7%BB%E9%99%A4%E5%85%83%E7%B4%A0/</guid>
      <description>Go 版本 package leetcode //给你一个数组 nums 和一个值 val，你需要 原地 移除所有数值等于 val 的元素，并返回移除后数组的新长度。 // // 不要使用额外的数组空间，你必须仅使用 O(1) 额外空间并 原地 修改输入数组。 // // 元素的顺序可以改变。你不需要考虑数组中超出新长度后面的元素。 // // // // 说明: // // 为什么返回数值是整数，但输出的答案是数组呢? // // 请注意，输入数组是以「引用」方式传递的，这意味着在函数里修改输入数组对于调用者是可见的。 // // 你可以想象内部操作如下: // // //// nums 是以“引用”方式传递的。也就是说，不对实参作任何拷贝 //int len = removeElement(nums, val); // //// 在函数里修改输入数组对于调用者是可见的。 //// 根据你的函数返回的长度, 它会打印出数组中 该长度范围内 的所有元素。 //for (int i = 0; i &amp;lt; len; i++) { // print(nums[i]); //} // // // // // 示例 1： // // //输入：nums = [3,2,2,3], val = 3 //输出：2, nums = [2,2] //解释：函数应该返回新的长度 2, 并且 nums 中的前两个元素均为 2。你不需要考虑数组中超出新长度后面的元素。例如，函数返回的新长度为 2 ，而 //nums = [2,2,3,3] 或 nums = [2,2,0,0]，也会被视作正确答案。 // // // 示例 2： // // //输入：nums = [0,1,2,2,3,0,4,2], val = 2 //输出：5, nums = [0,1,4,0,3] //解释：函数应该返回新的长度 5, 并且 nums 中的前五个元素为 0, 1, 3, 0, 4。注意这五个元素可为任意顺序。你不需要考虑数组中超出新长度后面 //的元素。 // // // // // 提示： // // // 0 &amp;lt;= nums.</description>
    </item>
    
    <item>
      <title>[63]不同路径 II</title>
      <link>https://oxygenbytes.github.io/leetcode/dp/63%E4%B8%8D%E5%90%8C%E8%B7%AF%E5%BE%84-ii-/</link>
      <pubDate>Mon, 14 Jun 2021 14:13:48 +0800</pubDate>
      
      <guid>https://oxygenbytes.github.io/leetcode/dp/63%E4%B8%8D%E5%90%8C%E8%B7%AF%E5%BE%84-ii-/</guid>
      <description>//一个机器人位于一个 m x n 网格的左上角 （起始点在下图中标记为“Start” ）。 // // 机器人每次只能向下或者向右移动一步。机器人试图达到网格的右下角（在下图中标记为“Finish”）。 // // 现在考虑网格中有障碍物。那么从左上角到右下角将会有多少条不同的路径？ // // // // 网格中的障碍物和空位置分别用 1 和 0 来表示。 // // // // 示例 1： // // //输入：obstacleGrid = [[0,0,0],[0,1,0],[0,0,0]] //输出：2 //解释： //3x3 网格的正中间有一个障碍物。 //从左上角到右下角一共有 2 条不同的路径： //1. 向右 -&amp;gt; 向右 -&amp;gt; 向下 -&amp;gt; 向下 //2. 向下 -&amp;gt; 向下 -&amp;gt; 向右 -&amp;gt; 向右 // // // 示例 2： // // //输入：obstacleGrid = [[0,1],[0,0]] //输出：1 // // // // // 提示： // // // m == obstacleGrid.</description>
    </item>
    
    <item>
      <title>[96]不同的二叉搜索树</title>
      <link>https://oxygenbytes.github.io/leetcode/dp/96%E4%B8%8D%E5%90%8C%E7%9A%84%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91-/</link>
      <pubDate>Mon, 14 Jun 2021 14:03:03 +0800</pubDate>
      
      <guid>https://oxygenbytes.github.io/leetcode/dp/96%E4%B8%8D%E5%90%8C%E7%9A%84%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91-/</guid>
      <description>//给你一个整数 n ，求恰由 n 个节点组成且节点值从 1 到 n 互不相同的 二叉搜索树 有多少种？返回满足题意的二叉搜索树的种数。 // // // // 示例 1： // // //输入：n = 3 //输出：5 // // // 示例 2： // // //输入：n = 1 //输出：1 // // // // // 提示： // // // 1 &amp;lt;= n &amp;lt;= 19 // // Related Topics 树 动态规划 // 👍 1190 👎 0  /* * 96 不同的二叉搜索树 * 2021-06-14 14:03:03 * @author oxygenbytes */ #include &amp;#34;leetcode.</description>
    </item>
    
    <item>
      <title>[200]岛屿数量</title>
      <link>https://oxygenbytes.github.io/leetcode/dfs/200%E5%B2%9B%E5%B1%BF%E6%95%B0%E9%87%8F-/</link>
      <pubDate>Mon, 14 Jun 2021 13:07:54 +0800</pubDate>
      
      <guid>https://oxygenbytes.github.io/leetcode/dfs/200%E5%B2%9B%E5%B1%BF%E6%95%B0%E9%87%8F-/</guid>
      <description>//给你一个由 &amp;#39;1&amp;#39;（陆地）和 &amp;#39;0&amp;#39;（水）组成的的二维网格，请你计算网格中岛屿的数量。 // // 岛屿总是被水包围，并且每座岛屿只能由水平方向和/或竖直方向上相邻的陆地连接形成。 // // 此外，你可以假设该网格的四条边均被水包围。 // // // // 示例 1： // // //输入：grid = [ // [&amp;#34;1&amp;#34;,&amp;#34;1&amp;#34;,&amp;#34;1&amp;#34;,&amp;#34;1&amp;#34;,&amp;#34;0&amp;#34;], // [&amp;#34;1&amp;#34;,&amp;#34;1&amp;#34;,&amp;#34;0&amp;#34;,&amp;#34;1&amp;#34;,&amp;#34;0&amp;#34;], // [&amp;#34;1&amp;#34;,&amp;#34;1&amp;#34;,&amp;#34;0&amp;#34;,&amp;#34;0&amp;#34;,&amp;#34;0&amp;#34;], // [&amp;#34;0&amp;#34;,&amp;#34;0&amp;#34;,&amp;#34;0&amp;#34;,&amp;#34;0&amp;#34;,&amp;#34;0&amp;#34;] //] //输出：1 // // // 示例 2： // // //输入：grid = [ // [&amp;#34;1&amp;#34;,&amp;#34;1&amp;#34;,&amp;#34;0&amp;#34;,&amp;#34;0&amp;#34;,&amp;#34;0&amp;#34;], // [&amp;#34;1&amp;#34;,&amp;#34;1&amp;#34;,&amp;#34;0&amp;#34;,&amp;#34;0&amp;#34;,&amp;#34;0&amp;#34;], // [&amp;#34;0&amp;#34;,&amp;#34;0&amp;#34;,&amp;#34;1&amp;#34;,&amp;#34;0&amp;#34;,&amp;#34;0&amp;#34;], // [&amp;#34;0&amp;#34;,&amp;#34;0&amp;#34;,&amp;#34;0&amp;#34;,&amp;#34;1&amp;#34;,&amp;#34;1&amp;#34;] //] //输出：3 // // // // // 提示： // // // m == grid.length // n == grid[i].length // 1 &amp;lt;= m, n &amp;lt;= 300 // grid[i][j] 的值为 &amp;#39;0&amp;#39; 或 &amp;#39;1&amp;#39; // // Related Topics 深度优先搜索 广度优先搜索 并查集 // 👍 1191 👎 0  /* * 200 岛屿数量 * 2021-06-14 13:07:54 * @author oxygenbytes */ #include &amp;#34;leetcode.</description>
    </item>
    
    <item>
      <title>[735]行星碰撞</title>
      <link>https://oxygenbytes.github.io/leetcode/stack/735%E8%A1%8C%E6%98%9F%E7%A2%B0%E6%92%9E-/</link>
      <pubDate>Sun, 13 Jun 2021 18:37:15 +0800</pubDate>
      
      <guid>https://oxygenbytes.github.io/leetcode/stack/735%E8%A1%8C%E6%98%9F%E7%A2%B0%E6%92%9E-/</guid>
      <description>//给定一个整数数组 asteroids，表示在同一行的行星。 // // 对于数组中的每一个元素，其绝对值表示行星的大小，正负表示行星的移动方向（正表示向右移动，负表示向左移动）。每一颗行星以相同的速度移动。 // // 找出碰撞后剩下的所有行星。碰撞规则：两个行星相互碰撞，较小的行星会爆炸。如果两颗行星大小相同，则两颗行星都会爆炸。两颗移动方向相同的行星，永远不会发生碰撞 //。 // // // // 示例 1： // // //输入：asteroids = [5,10,-5] //输出：[5,10] //解释：10 和 -5 碰撞后只剩下 10 。 5 和 10 永远不会发生碰撞。 // // 示例 2： // // //输入：asteroids = [8,-8] //输出：[] //解释：8 和 -8 碰撞后，两者都发生爆炸。 // // 示例 3： // // //输入：asteroids = [10,2,-5] //输出：[10] //解释：2 和 -5 发生碰撞后剩下 -5 。10 和 -5 发生碰撞后剩下 10 。 // // 示例 4： // // //输入：asteroids = [-2,-1,1,2] //输出：[-2,-1,1,2] //解释：-2 和 -1 向左移动，而 1 和 2 向右移动。 由于移动方向相同的行星不会发生碰撞，所以最终没有行星发生碰撞。 // // // // 提示： // // // 2 &amp;lt;= asteroids.</description>
    </item>
    
    <item>
      <title>[739]每日温度</title>
      <link>https://oxygenbytes.github.io/leetcode/stack/739%E6%AF%8F%E6%97%A5%E6%B8%A9%E5%BA%A6-/</link>
      <pubDate>Sun, 13 Jun 2021 18:08:44 +0800</pubDate>
      
      <guid>https://oxygenbytes.github.io/leetcode/stack/739%E6%AF%8F%E6%97%A5%E6%B8%A9%E5%BA%A6-/</guid>
      <description>//请根据每日 气温 列表，重新生成一个列表。对应位置的输出为：要想观测到更高的气温，至少需要等待的天数。如果气温在这之后都不会升高，请在该位置用 0 来代替。 // // // 例如，给定一个列表 temperatures = [73, 74, 75, 71, 69, 72, 76, 73]，你的输出应该是 [1, 1, 4, 2 //, 1, 1, 0, 0]。 // // 提示：气温 列表长度的范围是 [1, 30000]。每个气温的值的均为华氏度，都是在 [30, 100] 范围内的整数。 // Related Topics 栈 哈希表 // 👍 776 👎 0  /* * 739 每日温度 * 2021-06-13 18:08:44 * @author oxygenbytes */ #include &amp;#34;leetcode.h&amp;#34; //leetcode submit region begin(Prohibit modification and deletion) class Solution { public: vector&amp;lt;int&amp;gt; dailyTemperatures(vector&amp;lt;int&amp;gt;&amp;amp; temperatures) { int n = temperatures.</description>
    </item>
    
  </channel>
</rss>
